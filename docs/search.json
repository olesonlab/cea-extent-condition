[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Oʻahu Extents and Conditions",
    "section": "",
    "text": "Install Packages and Load Libraries\nif (!requireNamespace(\"pacman\", quietly = TRUE)) {\n  install.packages(\"pacman\")\n}\n\npacman::p_load(renv, yaml, rmarkdown, sf, leaflet, mapview, htmlwidgets,\n               janitor, tidyverse, googlesheets4, terra, lwgeom,\n               viridis, stars)"
  },
  {
    "objectID": "index.html#packages-and-libraries",
    "href": "index.html#packages-and-libraries",
    "title": "Oʻahu Extents and Conditions",
    "section": "",
    "text": "Install Packages and Load Libraries\nif (!requireNamespace(\"pacman\", quietly = TRUE)) {\n  install.packages(\"pacman\")\n}\n\npacman::p_load(renv, yaml, rmarkdown, sf, leaflet, mapview, htmlwidgets,\n               janitor, tidyverse, googlesheets4, terra, lwgeom,\n               viridis, stars)"
  },
  {
    "objectID": "index.html#datasets",
    "href": "index.html#datasets",
    "title": "Oʻahu Extents and Conditions",
    "section": "Datasets",
    "text": "Datasets\n\n\nAuthenticate Google account\ngs4_auth()\n\n\n\nExtents\n\nMarine\n\n\nImport Oʻahu Extents Data\noahu_extent_sheet_names &lt;- c(\n  \"marine\" = \"https://docs.google.com/spreadsheets/d/1E4UHa1S2iJjucl04w8D0tRSu5GwtoqwfSDHk2-guzCA/edit#gid=0\",\n  \"terrestrial\" = \"https://docs.google.com/spreadsheets/d/1E4UHa1S2iJjucl04w8D0tRSu5GwtoqwfSDHk2-guzCA/edit#gid=1584432883\"\n)\n\noahu_extent_dfs &lt;- map(oahu_extent_sheet_names, read_sheet)\n\n\n\n\nTidy Oʻahu Extents Data\nnew_extent_names &lt;- c(\"island\", \"moku\", \"temp1\", \"temp2\", \"temp3\", \"temp4\", \"temp5\", \"temp6\")\n\ntidied_oahu_marine_extents_df &lt;- oahu_extent_dfs$marine %&gt;% \n  select(1, 2, 8:13) %&gt;% \n  set_names(new_extent_names) %&gt;%\n  mutate(island = \"Oʻahu\") %&gt;%\n  fill(moku, .direction = \"down\") %&gt;%\n  mutate(\n    moku = case_when(\n      lag(island) == \"MOKU\" ~ moku,\n      TRUE ~ moku\n    )\n  ) %&gt;% \n  filter(temp1 %in% c(\"Area (km2)\", \"Opening Stock (2004-2014)\")) %&gt;%\n  pivot_longer(\n    cols = c(4:8),\n    names_to = \"temp\",\n    values_to = \"habitat\"\n  ) %&gt;% \n  select(-c(3, 4)) %&gt;% \n  mutate(\n    opening_stock = if_else(grepl(\"^\\\\d+(\\\\.\\\\d+)?$|^-$\", habitat), as.character(habitat), NA_character_),\n    opening_stock = if_else(opening_stock == \"-\", \"0\", opening_stock),\n    opening_stock = as.numeric(opening_stock)\n  ) %&gt;% \n  mutate(row = row_number()) %&gt;%\n  # Create a grouping variable for habitats and their corresponding stock values\n  group_by(island, moku) %&gt;%\n  mutate(group = cumsum(habitat %in% c(\"Soft Bottom\", \"Other Hard Bottom\", \"Rock/ Boulder\", \"Pavement\", \"Coral Dominated Hard Bottom\") | row == 1)) %&gt;%\n  # Shift opening_stock values up within each group\n  mutate(opening_stock = if_else(group &gt; 1 & !is.na(opening_stock), opening_stock, lead(opening_stock, n = 5))) %&gt;%\n  ungroup() %&gt;%\n  # Filter out the stock value rows, leaving only habitat rows\n  filter(habitat %in% c(\"Soft Bottom\", \"Other Hard Bottom\", \"Rock/ Boulder\", \"Pavement\", \"Coral Dominated Hard Bottom\")) %&gt;%\n  select(-row, -group) %&gt;% \n  mutate(\n    across(c(island, moku), as.factor),\n    habitat = as.factor(map_chr(habitat, ~ .x[1]))\n    ) %&gt;% \n  # filter(habitat != \"Other Hard Bottom\") %&gt;% \n  mutate(habitat = if_else(habitat == \"Rock/ Boulder\", \"Rock/Boulder\", habitat))\n\npaged_table(tidied_oahu_marine_extents_df)\n\n\n\n  \n\n\n\n\n\nTerrestrial\n\n\n\nConditions\n\n\nImport Oʻahu Conditions Data\nconditions_sheet_url &lt;- \"https://docs.google.com/spreadsheets/d/1KBxESi6GaPPAd1fodUzF-xxVm5Tvayca0Hhy2aqOoPA/edit?usp=sharing\"\n\n# Retrieve the Google Sheet document\noahu_conditions_sheets &lt;- gs4_get(conditions_sheet_url) %&gt;% \n  pluck(\"sheets\") %&gt;% \n  filter(str_detect(name, \"Oahu\"))\n\n# Read each \"Oahu\" sheet into a list of data frames\noahu_conditions_dfs &lt;- purrr::map(oahu_conditions_sheets$name, ~ read_sheet(conditions_sheet_url, sheet = .x)) %&gt;% \n  set_names(oahu_conditions_sheets$name)\n\n\n\n\nTidy Oʻahu Conditions Data\ntidy_conditions_data &lt;- function(df, remove_cols_vect = NULL, remove_rows_vect) {\n  df_tidied &lt;- df %&gt;%\n  mutate(island = \"Oʻahu\",\n         moku = if_else(ISLAND == \"MOKU\", Oahu, NA_character_),\n         ecosystem_type = if_else(...3 == \"Ecosystem Type\", Oahu, NA_character_)) %&gt;%\n  relocate(island, moku, ecosystem_type, .before = \"...1\") %&gt;%\n  fill(c(moku, ecosystem_type), .direction = \"down\") %&gt;%\n  rename(\"typology_class\" = ...1,\n         \"descriptor\" = ...2,\n         \"unit\" = ...3,\n         \"Variable Values: Opening Value\" = ISLAND,\n         \"Variable Values: Closing Value\" = Oahu,\n         \"Actively Managed or Conserved\" = ...6,\n         \"Reference Level Values: Upper Level\" = ...7,\n         \"Reference Level Values: Lower Level\" = ...8,\n         \"Indicator Values (Rescaled): Opening Value\" = ...9,\n         \"Indicator Values (Rescaled): Closing Value\" = ...10,\n         \"Indicator Values (Rescaled): Change in Indicator\" = ...11) %&gt;% \n    {if (!is.null(remove_cols_vect)) select(., -all_of(remove_cols_vect)) else .} %&gt;% \n  slice(-remove_rows_vect) %&gt;%\n  fill(c(typology_class, descriptor, unit), .direction = \"down\") %&gt;%\n  mutate(typology_class = str_replace_all(typology_class, \"\\\\s+|\\\\n\", \" \")) %&gt;%\n  separate(typology_class, into = c(\"typology_class_code\", \"typology\"),\n           sep = \"\\\\) \",\n           extra = \"merge\",\n           fill = \"right\") %&gt;%\n  mutate(\n    typology_class_code = str_trim(str_replace(typology_class_code, \"\\\\(\", \"\")),\n    typology = str_trim(str_replace(typology, \"^\\\\)\", \"\"))\n    ) %&gt;%\n  mutate(\n    across(where(is.character), ~gsub(\"([A-Za-z]+)/ ([A-Za-z]+)\", \"\\\\1/\\\\2\", .))) %&gt;%\n  mutate(across(.cols = 8:15, .fns = as.character)) %&gt;%\n  pivot_longer(\n    cols = c(8:15),\n    names_to = \"measurement\",\n    values_to = \"value\"\n  ) %&gt;%\n  separate(measurement, into = c(\"category\", \"measurement\"), sep = \": \", convert = TRUE) %&gt;%\n  mutate(\n    category = str_trim(category),\n    measurement = str_trim(measurement)\n  ) %&gt;%\n  mutate(\n    category = as.factor(category),\n    measurement = as.factor(measurement),\n    value = as.numeric(value)\n  ) %&gt;%\n    mutate(measurement = coalesce(measurement, \"Actively Managed or Conserved\"))\n  \n    return(df_tidied)\n}\n\ntidied_oahu_conditions_dfs_list &lt;- list(\n  list(df = oahu_conditions_dfs$WAIANAE_Oahu, \n       remove_cols_vect = c(15:20), \n       remove_rows_vect = c(1:6, 18:27, 39:45, 55:59, 62:67, 83:88)),\n  list(df = oahu_conditions_dfs$KOOLAUPOKO_Oahu, \n       remove_rows_vect = c(1:6, 18:24, 36:42, 55:64, 67:74, 90:96, 98:106)),\n  list(df = oahu_conditions_dfs$EWA_Oahu, \n       remove_rows_vect = c(1:6, 18:23, 35:40, 53:60, 63:71)),\n  list(df = oahu_conditions_dfs$KONA_Oahu, \n       remove_rows_vect = c(1:5, 17:22, 34:39, 52:60, 63:71, 87:92, 94:97)),\n  list(df = oahu_conditions_dfs$KOOLAULOA_Oahu, \n       remove_rows_vect = c(1:5, 17:22, 34:39, 52:56, 59:64, 80:84, 86:89, 95:103)),\n  list(df = oahu_conditions_dfs$WAIALUA_Oahu, \n       remove_rows_vect = c(1:5, 17:22, 34:39, 52:56, 59:64, 80:85))\n)\n\ntidied_oahu_conditions_df &lt;- map_dfr(tidied_oahu_conditions_dfs_list, ~do.call(tidy_conditions_data, .x)) %&gt;% \n  mutate(moku = gsub(\"Ewa\", \"ʻEwa\", moku))\n\npaged_table(tidied_oahu_conditions_df)\n\n\n\n  \n\n\n\n\n\nExport Tidied Datasets\n\n# write.csv(tidied_oahu_conditions_df,\n#           paste0(\"data/tidied/\",\n#                  format(Sys.Date(), \"%Y-%m-%d\"),\n#                  \"_tidied-oahu-conditions.csv\"),\n#           row.names = FALSE\n#           )\n# \n# write.csv(tidied_oahu_marine_extents_df,\n#           paste0(\"data/tidied/\",\n#                  format(Sys.Date(), \"%Y-%m-%d\"),\n#                  \"_tidied-oahu-marine-extents.csv\"),\n#           row.names = FALSE\n#           )"
  },
  {
    "objectID": "index.html#desired-outputs",
    "href": "index.html#desired-outputs",
    "title": "Oʻahu Extents and Conditions",
    "section": "Desired Output(s)",
    "text": "Desired Output(s)\nQuarto website or Shiny Dashboard of extents and conditions of each island by moku\nFocuses:\n\nExtent and condition &gt; Waianae, Oahu\nExtent &gt; MHI\nConditions &gt; Oahu\n\n\nInteractive Map\n\ncrs &lt;- \"EPSG:4326\"\n\n\nmoku &lt;- st_read(\"data/spatial/moku/Moku_NEW.shp\", quiet = TRUE)\n\n# Assuming 'moku' is your spatial vector data and needs to be transformed as well\nmoku_transformed &lt;- moku %&gt;%\n  clean_names() %&gt;%\n  mutate(name2 = str_to_title(name2)) %&gt;%\n  st_transform(crs = crs)\n\nwaianae_moku &lt;- moku_transformed %&gt;% \n  filter(name2 == \"Waianae\")\n\n\nmhi_marine_extent &lt;- terra::rast(\"data/spatial/extent-layers/marine/Benthic_Habitat_5Classes_2022_10.tif\") %&gt;% \n  terra::project(crs)\n\nwaianae_moku_marine_extent &lt;- mhi_marine_extent %&gt;% \n  crop(waianae_moku) %&gt;% \n  as.factor()\n\n# waianae_moku_marine_extent@ccp$getCategories()\n# \n# getCategories()\n# activeCat(waianae_moku_marine_extent)\n\n# waianae_moku_marine_extent@cpp$activeCat() &lt;- 1\n\n\n# Define the colors for the habitat categories that are actually present in the raster\nhabitat_colors &lt;- c(\"white\", \"#F4E8C1\", \"#808080\", \"green\", \"#FF4500\")  # Excludes \"Other Hard Bottom\"\n\n# Update the RAT with the correct values and colors, excluding \"Other Hard Bottom\"\nrat &lt;- data.frame(\n  value = c(0, 1, 3, 4, 5),  # Updated to reflect the values that are present\n  habitat = c(\"NA\", \"Soft Bottom\", \"Rock/Boulder\", \"Pavement\", \"Coral Dominated Hard Bottom\"),\n  color = habitat_colors\n)\n\n# Assign the updated RAT to the raster\nlevels(waianae_moku_marine_extent) &lt;- rat\n\nna_color &lt;- \"black\"  \nrat$color[is.na(rat$color)] &lt;- na_color\n\n\ncolored_waianae_moku_extents &lt;- rat %&gt;% \n  left_join(tidied_waianae_oahu_extents, ., by = \"habitat\")\n\n\nterra::plot(waianae_moku_marine_extent, col = colored_waianae_moku_extents$color)\nlines(waianae_moku, col=\"forestgreen\", lwd=5) \n\n\nleaflet() %&gt;%\n  setView(lng = -157.99827222584105, lat = 21.47, zoom = 10) %&gt;%\n  addProviderTiles(providers$Esri.WorldImagery) %&gt;%\n  addRasterImage(waianae_moku_marine_extent, opacity = 0.8, colors = rat$color) %&gt;%\n  # addLegend(pal = rat$Color, values = rat$Value, opacity = 1, title = \"Habitat\") %&gt;% \n  addPolygons(data = waianae_moku, color = \"#F4C2A5\", opacity = 0.5,\n              label = ~as.character(name2),\n              labelOptions = labelOptions(\n                direction = 'auto', \n                style = list('font-size' = '15pt',\n                             'font-weight' = 'bold'), \n                noHide = TRUE)\n              ) \n\n\n# Generate a color palette\npalette &lt;- colorFactor(palette = \"viridis\", domain = waianae_moku_marine_extent_df$Habitat)\n\n# Create the Leaflet map\nleaflet(waianae_moku_marine_extent_sf) %&gt;%\n  setView(lng = -158.18700955981603, lat = 21.44041625309884, zoom = 9) %&gt;%\n  addProviderTiles(providers$Esri.WorldImagery) %&gt;%\n  addPolygons(fillColor = ~colors(layer), color = ~colors(layer), fillOpacity = 0.7, weight = 0) %&gt;%\n  addLegend(pal = colors, values = ~layer, opacity = 1, title = \"Habitat\") %&gt;% \n  addPolygons(data = waianae_moku, color = \"#F4C2A5\", opacity = 0.5,\n              label = ~as.character(name2),\n              labelOptions = labelOptions(\n                direction = 'auto', \n                style = list('font-size' = '15pt',\n                             'font-weight' = 'bold'), \n                noHide = TRUE)\n              ) \n\n\nmapview(waianae_moku_marine_extent, legend = TRUE, trim = TRUE, \n        use.layer.names = TRUE) + \n  mapview(waianae_moku, label = waianae_moku$name2)\n\n\n\nCreate Interactive Map\nleaflet() %&gt;%\n  setView(lng = -158.18700955981603, lat = 21.44041625309884, zoom = 12) %&gt;%\n  addProviderTiles(providers$Esri.WorldImagery) %&gt;%\n  addTiles(urlTemplate = \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n           options = tileOptions(opacity = 0.9)) %&gt;%\n  addTiles(urlTemplate = \"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\",\n           options = tileOptions(opacity = 0.9)) %&gt;%\n    addRasterImage(marine_extent, opacity = 0.8, colors = viridis::viridis(100)) %&gt;%\n  addPolygons(data = moku_transformed, \n              color = \"#F4C2A5\",\n              opacity = 0.5,\n              label = ~as.character(name2), # Add hover labels\n              labelOptions = labelOptions(\n                direction = 'top', \n                style = list('font-size' = '20pt'),\n                noHide = TRUE\n                )\n              )"
  },
  {
    "objectID": "index.html#resources",
    "href": "index.html#resources",
    "title": "Oʻahu Extents and Conditions",
    "section": "Resources",
    "text": "Resources\n\nEsri | Sentinel-2 Land Cover Explorer\nUnleash the Power of 3D: Crafting Stunning Land Cover Maps with R by Milos Makes Maps"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  }
]