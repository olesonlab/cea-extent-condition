[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hawaii Coastal Ecosystem Extents and Conditions",
    "section": "",
    "text": "Quarto website or Shiny Dashboard of extents and conditions of each island by moku\nCurrent Focus: Oʻahu Extents and Conditions"
  },
  {
    "objectID": "index.html#desired-outputs",
    "href": "index.html#desired-outputs",
    "title": "Hawaii Coastal Ecosystem Extents and Conditions",
    "section": "",
    "text": "Quarto website or Shiny Dashboard of extents and conditions of each island by moku\nCurrent Focus: Oʻahu Extents and Conditions"
  },
  {
    "objectID": "index.html#packages-and-libraries",
    "href": "index.html#packages-and-libraries",
    "title": "Hawaii Coastal Ecosystem Extents and Conditions",
    "section": "Packages and Libraries",
    "text": "Packages and Libraries\n\n\nInstall Packages and Load Libraries\nif (!requireNamespace(\"pacman\", quietly = TRUE)) {\n  install.packages(\"pacman\")\n}\n\npacman::p_load(renv, yaml, rmarkdown, sf, leaflet, mapview, htmlwidgets,\n               janitor, tidyverse, googlesheets4, terra, lwgeom,\n               viridis, stars)"
  },
  {
    "objectID": "index.html#helper-functions",
    "href": "index.html#helper-functions",
    "title": "Hawaii Coastal Ecosystem Extents and Conditions",
    "section": "Helper Functions",
    "text": "Helper Functions\n\n\nFunction to Import Extents and Conditions Data from Google Sheets\nimport_mhi_extents_and_conditions_gs &lt;- function(url_str) {\n  imported_sheets &lt;- gs4_get(url_str) %&gt;%\n    pluck(\"sheets\")\n\n  sheet_names_lower &lt;- tolower(imported_sheets$name)\n\n  sheets_data &lt;- purrr::map(imported_sheets$name, ~ {\n    Sys.sleep(2) \n    read_sheet(url_str, sheet = .x)\n  })\n\n  names(sheets_data) &lt;- sheet_names_lower\n\n  return(sheets_data)\n}\n\n\n\n\nFunction to Subset Main Hawaiian Islands (MHI) Dataframes\nsubset_mhi_dfs &lt;- function(mhi_dfs, subset, island_str = NULL, moku_str = NULL, extent_str = NULL) {\n  if (!subset %in% c(\"conditions\", \"extents\")) {\n    stop(\"Subset must be either 'conditions' or 'extents'\")\n  }\n  \n  dfs &lt;- mhi_dfs[[subset]]\n  \n  filtered_dfs &lt;- list()\n  \n  for (name in names(dfs)) {\n    df &lt;- dfs[[name]]\n    \n    conditions_met &lt;- c(\n      is.null(island_str) || grepl(island_str, name, ignore.case = TRUE),\n      is.null(moku_str) || grepl(moku_str, name, ignore.case = TRUE),\n      is.null(extent_str) || grepl(extent_str, name, ignore.case = TRUE)\n    )\n    \n    if (all(conditions_met)) {\n      filtered_dfs[[name]] &lt;- df\n    }\n  }\n  \n  return(filtered_dfs)\n}\n\n\n\n\nFunction to Export Tidied Dataframes to CSV\nexport_tidied_dfs_to_csv &lt;- function(df, desc_name, dir_path = \"data/tidied/\") {\n  # Ensure the directory exists; if not, create it\n  if (!dir.exists(dir_path)) {\n    dir.create(dir_path, recursive = TRUE)\n  }\n  \n  # Construct the file path with the current date and descriptive name\n  file_path &lt;- paste0(dir_path,\n                      format(Sys.Date(), \"%Y-%m-%d\"),\n                      \"_tidied-\", desc_name, \".csv\")\n  \n  # Write the dataframe to a CSV file\n  write.csv(df, file_path, row.names = FALSE)\n  \n  # Optionally, print a message indicating where the file was saved\n  message(\"File saved to: \", file_path)\n}\n\n\n\n\nFunction to Tidy Oʻahu Conditions Data\ntidy_conditions_data &lt;- function(df, remove_cols_vect = NULL, remove_rows_vect) {\n  df_tidied &lt;- df %&gt;%\n  mutate(island = \"Oʻahu\",\n         moku = if_else(ISLAND == \"MOKU\", Oahu, NA_character_),\n         ecosystem_type = if_else(...3 == \"Ecosystem Type\", Oahu, NA_character_)) %&gt;%\n  relocate(island, moku, ecosystem_type, .before = \"...1\") %&gt;%\n  fill(c(moku, ecosystem_type), .direction = \"down\") %&gt;%\n  rename(\"typology_class\" = ...1,\n         \"descriptor\" = ...2,\n         \"unit\" = ...3,\n         \"Variable Values: Opening Value\" = ISLAND,\n         \"Variable Values: Closing Value\" = Oahu,\n         \"Actively Managed or Conserved\" = ...6,\n         \"Reference Level Values: Upper Level\" = ...7,\n         \"Reference Level Values: Lower Level\" = ...8,\n         \"Indicator Values (Rescaled): Opening Value\" = ...9,\n         \"Indicator Values (Rescaled): Closing Value\" = ...10,\n         \"Indicator Values (Rescaled): Change in Indicator\" = ...11) %&gt;% \n    {if (!is.null(remove_cols_vect)) select(., -all_of(remove_cols_vect)) else .} %&gt;% \n  slice(-remove_rows_vect) %&gt;%\n  fill(c(typology_class, descriptor, unit), .direction = \"down\") %&gt;%\n  mutate(typology_class = str_replace_all(typology_class, \"\\\\s+|\\\\n\", \" \")) %&gt;%\n  separate(typology_class, into = c(\"typology_class_code\", \"typology\"),\n           sep = \"\\\\) \",\n           extra = \"merge\",\n           fill = \"right\") %&gt;%\n  mutate(\n    typology_class_code = str_trim(str_replace(typology_class_code, \"\\\\(\", \"\")),\n    typology = str_trim(str_replace(typology, \"^\\\\)\", \"\"))\n    ) %&gt;%\n  mutate(\n    across(where(is.character), ~gsub(\"([A-Za-z]+)/ ([A-Za-z]+)\", \"\\\\1/\\\\2\", .))) %&gt;%\n  mutate(across(.cols = 8:15, .fns = as.character)) %&gt;%\n  pivot_longer(\n    cols = c(8:15),\n    names_to = \"measurement\",\n    values_to = \"value\"\n  ) %&gt;%\n  separate(measurement, into = c(\"category\", \"measurement\"), sep = \": \", convert = TRUE) %&gt;%\n  mutate(\n    category = str_trim(category),\n    measurement = str_trim(measurement)\n  ) %&gt;%\n  mutate(\n    category = as.factor(category),\n    measurement = as.factor(measurement),\n    value = as.numeric(value)\n  ) %&gt;%\n    mutate(measurement = coalesce(measurement, \"Actively Managed or Conserved\"))\n  \n    return(df_tidied)\n}"
  },
  {
    "objectID": "index.html#datasets",
    "href": "index.html#datasets",
    "title": "Hawaii Coastal Ecosystem Extents and Conditions",
    "section": "Datasets",
    "text": "Datasets\n\nImport Data\n\n\nConfigurations\ngs_urls &lt;- yaml::read_yaml(\"code/gs_urls.yml\")\ngs4_auth()\n\n\n\nGeneralSpecific\n\n\nImport extents and conditions data from Google Sheets for MHI:\n\nmhi_extents_dfs &lt;- import_mhi_extents_and_conditions_gs(gs_urls$extents)\n\nmhi_conditions_dfs &lt;- import_mhi_extents_and_conditions_gs(gs_urls$conditions)\n\nEfficiently load extents and conditions data for MHI:\n\n# Export once\n# mhi_dfs &lt;- mhi_dfs &lt;- list(\n#   conditions = mhi_conditions_dfs, \n#   extents = mhi_extents_dfs\n#   )\n# save(mhi_dfs, file = \"data/raw/mhi_dfs.RData\")\n\nbase::load(\"data/raw/mhi_dfs.RData\")\n\nList of MHI dataframes:\n\nnames(mhi_dfs$extents)\n\n [1] \"marine_oahu\"           \"terrestrial_oahu\"      \"marine_hawaii\"        \n [4] \"terrestrial_hawaii\"    \"marine_kahoolawe\"      \"terrestrial_kahoolawe\"\n [7] \"marine_kauai\"          \"terrestrial_kauai\"     \"marine_lanai\"         \n[10] \"terrestrial_lanai\"     \" marine_maui\"          \"terrestrial_maui\"     \n[13] \"marine_molokai\"        \"terrestrial_molokai\"   \"marine_niihau\"        \n[16] \"terrestrial_niihau\"   \n\nnames(mhi_dfs$conditions)\n\n [1] \"kona_molokai\"     \"kaluakoi_molokai\" \"palaau_molokai\"   \"halawa_molokai\"  \n [5] \"koolau_molokai\"   \"kahikinui_maui\"   \"kaupo_maui\"       \"honuaula_maui\"   \n [9] \"kipahulu_maui\"    \"hana_maui\"        \"kula_maui\"        \"kealaloloa_maui\" \n[13] \"lahaina_maui\"     \"wailuku_maui\"     \"hamakualoa _maui\" \"hamakuapoko_maui\"\n[17] \"koolau_maui\"      \"kaanapali_maui\"   \"koolau_lanai\"     \"kona_lanai\"      \n[21] \"halelea_kauai\"    \"koolau_kauai\"     \"napali_kauai\"     \"puna_kauai\"      \n[25] \"kona_kauai\"       \"mana_kauai\"       \"kona_kahoolawe\"   \"koolau_kahoolawe\"\n[29] \"hamakua_hawaii\"   \"hilo_hawaii\"      \"kau_hawaii\"       \"kohala_hawaii\"   \n[33] \"kona_hawaii\"      \"puna_hawaii\"      \"waianae_oahu\"     \"koolaupoko_oahu\" \n[37] \"ewa_oahu\"         \"kona_oahu\"        \"koolauloa_oahu\"   \"waialua_oahu\"    \n[41] \"clean_\"          \n\n\n\n\nSubset MHI dataframes:\n\noahu_extents_df &lt;- subset_mhi_dfs(\n  mhi_dfs, subset = \"extents\", island_str = \"oahu\"\n  )\n\noahu_conditions_dfs &lt;- subset_mhi_dfs(\n  mhi_dfs, subset = \"conditions\", island_str = \"oahu\"\n  )\n\nList of Oʻahu dataframes:\n\nnames(oahu_extents_df)\n\n[1] \"marine_oahu\"      \"terrestrial_oahu\"\n\nnames(oahu_conditions_dfs)\n\n[1] \"waianae_oahu\"    \"koolaupoko_oahu\" \"ewa_oahu\"        \"kona_oahu\"      \n[5] \"koolauloa_oahu\"  \"waialua_oahu\"   \n\n\n\n\n\n\n\nTidy Data\n\n\nAuthenticate Google account\ngs4_auth()\n\n\n\nExtentsConditions\n\n\n\nMarine\n\n\nTidy Oʻahu Marine Extents Data\nnew_extent_names &lt;- c(\"island\", \"moku\", \"temp1\", \"temp2\", \"temp3\", \"temp4\", \"temp5\", \"temp6\")\n\ntidied_oahu_marine_extents_df &lt;- oahu_extents_df$marine_oahu %&gt;% \n  select(1, 2, 8:13) %&gt;% \n  set_names(new_extent_names) %&gt;%\n  mutate(island = \"Oʻahu\") %&gt;%\n  fill(moku, .direction = \"down\") %&gt;%\n  mutate(\n    moku = case_when(\n      lag(island) == \"MOKU\" ~ moku,\n      TRUE ~ moku\n    )\n  ) %&gt;% \n  filter(temp1 %in% c(\"Area (km2)\", \"Opening Stock (2004-2014)\")) %&gt;%\n  pivot_longer(\n    cols = c(4:8),\n    names_to = \"temp\",\n    values_to = \"habitat\"\n  ) %&gt;% \n  select(-c(3, 4)) %&gt;% \n  mutate(\n    opening_stock = if_else(grepl(\"^\\\\d+(\\\\.\\\\d+)?$|^-$\", habitat), as.character(habitat), NA_character_),\n    opening_stock = if_else(opening_stock == \"-\", \"0\", opening_stock),\n    opening_stock = as.numeric(opening_stock)\n  ) %&gt;% \n  mutate(row = row_number()) %&gt;%\n  # Create a grouping variable for habitats and their corresponding stock values\n  group_by(island, moku) %&gt;%\n  mutate(group = cumsum(habitat %in% c(\"Soft Bottom\", \"Other Hard Bottom\", \"Rock/ Boulder\", \"Pavement\", \"Coral Dominated Hard Bottom\") | row == 1)) %&gt;%\n  # Shift opening_stock values up within each group\n  mutate(opening_stock = if_else(group &gt; 1 & !is.na(opening_stock), opening_stock, lead(opening_stock, n = 5))) %&gt;%\n  ungroup() %&gt;%\n  # Filter out the stock value rows, leaving only habitat rows\n  filter(habitat %in% c(\"Soft Bottom\", \"Other Hard Bottom\", \"Rock/ Boulder\", \"Pavement\", \"Coral Dominated Hard Bottom\")) %&gt;%\n  select(-row, -group) %&gt;% \n  mutate(\n    across(c(island, moku), as.factor),\n    habitat = as.factor(map_chr(habitat, ~ .x[1]))\n    ) %&gt;% \n  # filter(habitat != \"Other Hard Bottom\") %&gt;% \n  mutate(habitat = if_else(habitat == \"Rock/ Boulder\", \"Rock/Boulder\", habitat))\n\npaged_table(tidied_oahu_marine_extents_df)\n\n\n\n  \n\n\n\n\n\n\nTerrestrial\n\n\n\n\n\nTidy Oʻahu Conditions Data\ntidied_oahu_conditions_dfs_list &lt;- list(\n  list(df = oahu_conditions_dfs$waianae_oahu, \n       remove_cols_vect = c(15:20), \n       remove_rows_vect = c(1:6, 18:27, 39:45, 55:59, 62:67, 83:88)),\n  list(df = oahu_conditions_dfs$koolaupoko_oahu, \n       remove_rows_vect = c(1:6, 18:24, 36:42, 55:64, 67:74, 90:96, 98:106)),\n  list(df = oahu_conditions_dfs$ewa_oahu, \n       remove_rows_vect = c(1:6, 18:23, 35:40, 53:60, 63:71)),\n  list(df = oahu_conditions_dfs$kona_oahu, \n       remove_rows_vect = c(1:5, 17:22, 34:39, 52:60, 63:71, 87:92, 94:97)),\n  list(df = oahu_conditions_dfs$koolauloa_oahu, \n       remove_rows_vect = c(1:5, 17:22, 34:39, 52:56, 59:64, 80:84, 86:89, 95:103)),\n  list(df = oahu_conditions_dfs$waialua_oahu, \n       remove_rows_vect = c(1:5, 17:22, 34:39, 52:56, 59:64, 80:85))\n)\n\ntidied_oahu_conditions_df &lt;- map_dfr(tidied_oahu_conditions_dfs_list, ~do.call(tidy_conditions_data, .x)) %&gt;% \n  mutate(moku = gsub(\"Ewa\", \"ʻEwa\", moku))\n\npaged_table(tidied_oahu_conditions_df)\n\n\n\n  \n\n\n\n\n\n\n\n\nExport Tidied Data\n\ntidied_dfs_list &lt;- list(\n  list(df = tidied_oahu_conditions_df, desc_name = \"oahu-conditions\"),\n  list(df = tidied_oahu_marine_extents_df, desc_name = \"oahu-marine-extents\")\n)\n\nmap(tidied_dfs_list, ~export_tidied_dfs_csv(.x$df, .x$desc_name))"
  },
  {
    "objectID": "index.html#visualizations",
    "href": "index.html#visualizations",
    "title": "Hawaii Coastal Ecosystem Extents and Conditions",
    "section": "Visualizations",
    "text": "Visualizations"
  },
  {
    "objectID": "index.html#resources",
    "href": "index.html#resources",
    "title": "Hawaii Coastal Ecosystem Extents and Conditions",
    "section": "Resources",
    "text": "Resources\n\nEsri | Sentinel-2 Land Cover Explorer\nUnleash the Power of 3D: Crafting Stunning Land Cover Maps with R by Milos Makes Maps"
  }
]